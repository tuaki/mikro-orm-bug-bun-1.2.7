{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "overrides": [],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": [ "./tsconfig.json", "./apps/*/tsconfig.json", "./apps/*/*.config.ts" ]
    },
    "plugins": [
        "@typescript-eslint",
        "react-refresh"
    ],
    "rules": {
        "no-eval": [ "error" ],
        "semi": [ "error", "always" ],
        "indent": [ "warn", 4, {
            // A workaround for decorators. Not ideal, though.
            "ignoredNodes": [
                "FunctionExpression > .params[decorators.length > 0]",
                "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
                "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
            ]
        } ],
        "array-bracket-spacing": [ "warn", "always" ],
        "object-curly-spacing": [ "warn", "always" ],
        "space-before-function-paren": [ "warn", {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
        } ],
        "curly": [ "warn", "multi-or-nest", "consistent" ],
        "brace-style": [ "warn", "stroustrup" ],
        "@typescript-eslint/no-empty-function": [ "warn", { "allow": [ "private-constructors" ] } ],
        "nonblock-statement-body-position": [ "error", "below" ],
        "@typescript-eslint/member-delimiter-style": [ "error", { "singleline": { "delimiter": "comma" } } ],
        "@typescript-eslint/consistent-type-imports": [ "error", { "fixStyle": "inline-type-imports" } ],
        "comma-dangle": [ "warn", "always-multiline" ],
        "quotes": [ "warn", "single", { "allowTemplateLiterals": true } ],
        "jsx-quotes": [ "warn", "prefer-single" ],
        "@typescript-eslint/no-unused-vars": [ "error", {} ],
        "@typescript-eslint/unbound-method": [ "error", { "ignoreStatic": true } ],
        "no-warning-comments": [ "warn", { "terms": [ "TODO", "FIXME", "NICE_TO_HAVE" ] } ],
        "arrow-parens": [ "warn", "as-needed" ]
    },
    "ignorePatterns": [ "vite.config.ts" ]
}
